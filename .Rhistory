x-<1
x <- 1
x
quit
demo()
help.start()
x <- rnorm(50)
y <- rnorm(x)
plot (x,y)
ls()
rm (x,y)
x <- 1:20
w <- 1+sqrt(x)/2
plot (x,w)
q()
objects()
install.packages("shiny")
shinyApp(ui = ui, server = server)
install.packages("manipulate")
getOption("repos")
getOption("repos")
a <- 5
s <- 2
n <- 20
error <- qnorm(0.975)*s/sqrt(n)
left <- a-error
right <- a+error
left
right
install.packages(c("sourcetools", "htmltools"))
install.packages(c("sourcetools", "0.15"))
install.packages("sourcetools")
install.packages("htmltools")
shiny::runApp('Documents/Rstudio/downloads/code')
shiny::runApp('Documents/Rstudio/downloads/code')
install.packages("reticulate")
runApp('R/gauss')
path <- file.path("~","Desktop","Export_all_1min_02_17_2014")
path <- file.path("~","Desktop","Export_all_1min_02_17_2014_00_01_02.csv")
path
read.csv(path, stringsAsFactors = FALSE)
ecogenie <- read.csv(path, stringsAsFactors = FALSE)
str(ecogenie)
60*24
shiny::runApp('R/gauss')
mtcars
mtcars[1,2]
mtcars[2,2]
mtcars[2,3]
library(shiny); runApp('R/menu.R')
install.packages("DT")
runApp('R/menu.R')
install.packages("tidyverse")
runApp('R/menu.R')
runApp('R/menu.R')
runApp('R/menu.R')
View(ecogenie)
# load reaquired libraries
library(ggplot2)
source('~/R/Liander/visualise_Liander_E.R', echo=TRUE)
source('~/R/Liander/visualise_Liander_E.R', echo=TRUE)
source('~/R/Liander/visualise_Liander_E.R', echo=TRUE)
source('~/R/Liander/visualise_Liander_E.R', echo=TRUE)
source('~/R/Liander/Liander_E_read_csv.R', echo=TRUE)
View(Liander_E)
View(Liander_E)
# change heading names in row 1
# set the column headings
col_headings <- c("atetime",
"Day",
"Profile_E1a_kWh",
"Profile_E1b_kWh",
"Profile_Total_kWh",
"empty_column",
"hour_fraction_E") # refers to Total
names(Liander_E) <- col_headings
# - delete unnecessary columns "Day" and "empty_column"
Liander_E$Day          <- NULL
Liander_E$empty_column <- NULL
# - delete all rows with no Datetime
Liander_E <- Liander_E[!(Liander_E$Datetime == "" | is.na(Liander_E$Datetime)), ]
# - migrate string date and time "Datetime" to R time stamp POSIXct
# Note that timezone is set to UTC to avoid missing times due to daylight saving time changes
Liander_E[,"Datetime"] <- as.POSIXct(Liander_E[,"Datetime"],
format="%m-%d-%Y %H:%M:%S",
tz ="UTC")
# add columns "Date" (YYYY-MM-DD) and "Time" (HH) for heat map plot
# Date
Liander_E$Date <- as.Date(Liander_E$Datetime)
# Time in hours as numerical value
Liander_E$Time <- as.numeric(format(as.POSIXct(Liander_E$Datetime) ,format = "%H") )
# change heading names in row 1
# set the column headings
col_headings <- c("Datetime",
"Day",
"Profile_E1a_kWh",
"Profile_E1b_kWh",
"Profile_Total_kWh",
"empty_column",
"hour_fraction_E") # refers to Total
names(Liander_E) <- col_headings
source('~/R/Liander/Liander_E_read_csv.R', echo=TRUE)
# change heading names in row 1
# set the column headings
col_headings <- c("Datetime",
"Day",
"Profile_E1a_kWh",
"Profile_E1b_kWh",
"Profile_Total_kWh",
"empty_column",
"hour_fraction_E") # refers to Total
names(Liander_E) <- col_headings
# - delete unnecessary columns "Day" and "empty_column"
Liander_E$Day          <- NULL
Liander_E$empty_column <- NULL
# - delete all rows with no Datetime
Liander_E <- Liander_E[!(Liander_E$Datetime == "" | is.na(Liander_E$Datetime)), ]
# - migrate string date and time "Datetime" to R time stamp POSIXct
# Note that timezone is set to UTC to avoid missing times due to daylight saving time changes
Liander_E[,"Datetime"] <- as.POSIXct(Liander_E[,"Datetime"],
format="%m-%d-%Y %H:%M:%S",
tz ="UTC")
# add columns "Date" (YYYY-MM-DD) and "Time" (HH) for heat map plot
# Date
Liander_E$Date <- as.Date(Liander_E$Datetime)
# Time in hours as numerical value
Liander_E$Time <- as.numeric(format(as.POSIXct(Liander_E$Datetime) ,format = "%H") )
Liander_E[1,]
source('~/R/Liander/Liander_E_read_csv.R', echo=TRUE)
source('~/R/Liander/Liander_E_data_cleaning.R', echo=TRUE)
View(Liander_E)
View(Liander_E)
source('~/R/Liander/Liander_E.R', echo=TRUE)
source('~/R/Liander/Liander_E.R', echo=TRUE)
source('~/R/Liander/Liander_E.R', echo=TRUE)
View(Liander_E)
View(Liander_E)
View(Liander_E)
View(Liander_E)
View(Liander_E)
source('~/R/Liander/Liander_E.R', echo=TRUE)
source('~/R/Liander/Liander_E.R', echo=TRUE)
source('~/R/Liander/Liander_E_visualise_heat_map.R', echo=TRUE)
source('~/R/Liander/Liander_E_visualise_heat_map.R', echo=TRUE)
source('~/R/Liander/Liander_E_read_csv.R', echo=TRUE)
View(Liander_E)
source('~/R/Liander/Liander_E_data_cleaning.R', echo=TRUE)
View(Liander_E)
source('~/R/Liander/Liander_E_visualise_heat_map.R', echo=TRUE)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("RColorBrewer")
source('~/R/Liander/Liander_E.R', echo=TRUE)
source('~/R/Liander/Liander_E_visualise_heat_map.R', echo=TRUE)
source('~/R/Liander/Liander_E_visualise_heat_map.R', echo=TRUE)
View(Liander_E)
source('~/R/Liander/Liander_E_visualise_heat_map.R', echo=TRUE)
source('~/R/Liander/Liander_E_visualise_heat_map.R', echo=TRUE)
source('~/R/Liander/Liander_E.R', echo=TRUE)
source('~/R/Liander/Liander_E_visualise_heat_map.R', echo=TRUE)
source('~/R/Liander/Liander_E_visualise_heat_map.R', echo=TRUE)
source('~/R/Liander/Liander_G_read_csv.R', echo=TRUE)
View(Liander_G)
source('~/R/Liander/Liander_G_data_cleaning.R', echo=TRUE)
View(Liander_G)
source('~/R/Liander/Liander_G_read_csv.R', echo=TRUE)
View(Liander_G)
source('~/R/Liander/Liander_G_data_cleaning.R', echo=TRUE)
View(Liander_G)
source('~/R/Liander/Liander_G_read_csv.R', echo=TRUE)
View(Liander_E)
View(Liander_G)
# change heading names in row 1
# set the column headings
col_headings <- c("Datetime",
"Day",
"Profile_G1a_MJ",
"Profile_G2a_MJ",
"Profile_Total_MJ",
"hour_fraction_G") # refers to Total
names(Liander_G) <- col_headings
View(Liander_G)
# - delete unnecessary columns "Day"
Liander_G$Day          <- NULL
# - delete all rows with no Datetime
Liander_G <- Liander_G[!(Liander_G$Datetime == "" | is.na(Liander_G$Datetime)), ]
# - migrate string date and time "Datetime" to R time stamp POSIXct
# Note that timezone is set to UTC to avoid missing times due to daylight saving time changes
Liander_G[,"Datetime"] <- as.POSIXct(Liander_G[,"Datetime"],
format="%m-%d-%Y %H:%M:%S",
tz ="UTC")
# Liander dataset is missing first data point for 2009-01-01 00:00
# add new row and copy data from 2009-01-01 01:00
# and delete the last row which is 2010-01-01 00:00
# copy row 1 into temporary variable
# reference: https://stackoverflow.com/questions/11561856/add-new-row-to-dataframe-at-specific-row-index-not-appended
newrow <- Liander_G[1,]
# define number of rows to add
r<-1
# add copied row 1 into row 1 and bind the rest of the data frame
Liander_G <- rbind(Liander_G[1:1,],newrow,Liander_G[-(1:r),])
# change new row 1 date time
Liander_G[1,1] <- as.POSIXct('2008-01-01 00:00:00', tz="UTC")
# delete the last row which is 2009-01-01 00:00
Liander_G <- head(Liander_E, -1)
# add columns "Date" (YYYY-MM-DD) and "Time" (HH) for heat map plot
# Date
Liander_G$Date <- as.Date(Liander_G$Datetime)
# Time in hours as numerical value
Liander_G$Time <- as.numeric(format(as.POSIXct(Liander_G$Datetime) ,format = "%H") )
# add column for Profile_Total_average_kWh = Profile_Total_kWh divided by 10000 houses
Liander_G$Profile_Total_average_MJ <- Liander_G$Profile_Total_MJ / 10000
View(Liander_G)
source('~/R/Liander/Liander_G_read_csv.R', echo=TRUE)
# change heading names in row 1
# set the column headings
col_headings <- c("Datetime",
"Day",
"Profile_G1a_MJ",
"Profile_G2a_MJ",
"Profile_Total_MJ",
"hour_fraction_G") # refers to Total
names(Liander_G) <- col_headings
View(Liander_G)
# - delete unnecessary columns "Day"
Liander_G$Day          <- NULL
# - delete all rows with no Datetime
Liander_G <- Liander_G[!(Liander_G$Datetime == "" | is.na(Liander_G$Datetime)), ]
# - migrate string date and time "Datetime" to R time stamp POSIXct
# Note that timezone is set to UTC to avoid missing times due to daylight saving time changes
Liander_G[,"Datetime"] <- as.POSIXct(Liander_G[,"Datetime"],
format="%m-%d-%Y %H:%M:%S",
tz ="UTC")
# Liander dataset is missing first data point for 2009-01-01 00:00
# add new row and copy data from 2009-01-01 01:00
# and delete the last row which is 2010-01-01 00:00
# copy row 1 into temporary variable
# reference: https://stackoverflow.com/questions/11561856/add-new-row-to-dataframe-at-specific-row-index-not-appended
newrow <- Liander_G[1,]
# define number of rows to add
r<-1
# add copied row 1 into row 1 and bind the rest of the data frame
Liander_G <- rbind(Liander_G[1:1,],newrow,Liander_G[-(1:r),])
# change new row 1 date time
Liander_G[1,1] <- as.POSIXct('2008-01-01 00:00:00', tz="UTC")
# delete the last row which is 2009-01-01 00:00
Liander_G <- head(Liander_E, -1)
# add columns "Date" (YYYY-MM-DD) and "Time" (HH) for heat map plot
# Date
Liander_G$Date <- as.Date(Liander_G$Datetime)
# Time in hours as numerical value
Liander_G$Time <- as.numeric(format(as.POSIXct(Liander_G$Datetime) ,format = "%H") )
source('~/R/Liander/Liander_G_read_csv.R', echo=TRUE)
source('~/R/Liander/Liander_G_data_cleaning.R', echo=TRUE)
View(Liander_G)
